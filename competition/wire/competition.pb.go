// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.17.3
// source: competition/wire/competition.proto

package wire

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text   *string `protobuf:"bytes,1,opt,name=text,proto3,oneof" json:"text,omitempty"`
	Binary []byte  `protobuf:"bytes,2,opt,name=binary,proto3,oneof" json:"binary,omitempty"`
}

func (x *UUID) Reset() {
	*x = UUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUID) ProtoMessage() {}

func (x *UUID) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUID.ProtoReflect.Descriptor instead.
func (*UUID) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{0}
}

func (x *UUID) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *UUID) GetBinary() []byte {
	if x != nil {
		return x.Binary
	}
	return nil
}

type RegisterPlayerIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrchestrationURL string `protobuf:"bytes,1,opt,name=orchestrationURL,proto3" json:"orchestrationURL,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RegisterPlayerIn) Reset() {
	*x = RegisterPlayerIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPlayerIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPlayerIn) ProtoMessage() {}

func (x *RegisterPlayerIn) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPlayerIn.ProtoReflect.Descriptor instead.
func (*RegisterPlayerIn) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterPlayerIn) GetOrchestrationURL() string {
	if x != nil {
		return x.OrchestrationURL
	}
	return ""
}

func (x *RegisterPlayerIn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RegisterPlayerOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterPlayerOut) Reset() {
	*x = RegisterPlayerOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPlayerOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPlayerOut) ProtoMessage() {}

func (x *RegisterPlayerOut) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPlayerOut.ProtoReflect.Descriptor instead.
func (*RegisterPlayerOut) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{2}
}

type QuickMatchIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QuickMatchIn) Reset() {
	*x = QuickMatchIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickMatchIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickMatchIn) ProtoMessage() {}

func (x *QuickMatchIn) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickMatchIn.ProtoReflect.Descriptor instead.
func (*QuickMatchIn) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{3}
}

type QuickMatchOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchURL string `protobuf:"bytes,1,opt,name=matchURL,proto3" json:"matchURL,omitempty"`
	UUID     string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *QuickMatchOut) Reset() {
	*x = QuickMatchOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickMatchOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickMatchOut) ProtoMessage() {}

func (x *QuickMatchOut) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickMatchOut.ProtoReflect.Descriptor instead.
func (*QuickMatchOut) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{4}
}

func (x *QuickMatchOut) GetMatchURL() string {
	if x != nil {
		return x.MatchURL
	}
	return ""
}

func (x *QuickMatchOut) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

type SpawnIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game *UUID `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *SpawnIn) Reset() {
	*x = SpawnIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpawnIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnIn) ProtoMessage() {}

func (x *SpawnIn) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnIn.ProtoReflect.Descriptor instead.
func (*SpawnIn) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{5}
}

func (x *SpawnIn) GetGame() *UUID {
	if x != nil {
		return x.Game
	}
	return nil
}

type SpawnOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerURL string `protobuf:"bytes,1,opt,name=playerURL,proto3" json:"playerURL,omitempty"`
}

func (x *SpawnOut) Reset() {
	*x = SpawnOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpawnOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnOut) ProtoMessage() {}

func (x *SpawnOut) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnOut.ProtoReflect.Descriptor instead.
func (*SpawnOut) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{6}
}

func (x *SpawnOut) GetPlayerURL() string {
	if x != nil {
		return x.PlayerURL
	}
	return ""
}

var File_competition_wire_competition_proto protoreflect.FileDescriptor

var file_competition_wire_competition_proto_rawDesc = []byte{
	0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x77, 0x69,
	0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x50, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x22, 0x52, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x22,
	0x0e, 0x0a, 0x0c, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x22,
	0x3f, 0x0a, 0x0d, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x75, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44,
	0x22, 0x24, 0x0a, 0x07, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x49, 0x6e, 0x12, 0x19, 0x0a, 0x04, 0x67,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x55, 0x49, 0x44,
	0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x28, 0x0a, 0x08, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x4f,
	0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x52, 0x4c,
	0x32, 0x83, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x31, 0x12, 0x43, 0x0a, 0x18, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x11,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x1a, 0x12, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x0a, 0x51, 0x75, 0x69, 0x63, 0x6b,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0d, 0x2e, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x6e, 0x1a, 0x0e, 0x2e, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x32, 0x2f, 0x0a, 0x0d, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x77, 0x6e,
	0x12, 0x08, 0x2e, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x49, 0x6e, 0x1a, 0x09, 0x2e, 0x53, 0x70, 0x61,
	0x77, 0x6e, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_competition_wire_competition_proto_rawDescOnce sync.Once
	file_competition_wire_competition_proto_rawDescData = file_competition_wire_competition_proto_rawDesc
)

func file_competition_wire_competition_proto_rawDescGZIP() []byte {
	file_competition_wire_competition_proto_rawDescOnce.Do(func() {
		file_competition_wire_competition_proto_rawDescData = protoimpl.X.CompressGZIP(file_competition_wire_competition_proto_rawDescData)
	})
	return file_competition_wire_competition_proto_rawDescData
}

var file_competition_wire_competition_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_competition_wire_competition_proto_goTypes = []any{
	(*UUID)(nil),              // 0: UUID
	(*RegisterPlayerIn)(nil),  // 1: RegisterPlayerIn
	(*RegisterPlayerOut)(nil), // 2: RegisterPlayerOut
	(*QuickMatchIn)(nil),      // 3: QuickMatchIn
	(*QuickMatchOut)(nil),     // 4: QuickMatchOut
	(*SpawnIn)(nil),           // 5: SpawnIn
	(*SpawnOut)(nil),          // 6: SpawnOut
}
var file_competition_wire_competition_proto_depIdxs = []int32{
	0, // 0: SpawnIn.game:type_name -> UUID
	1, // 1: CompetitionV1.RegisterPersistentPlayer:input_type -> RegisterPlayerIn
	3, // 2: CompetitionV1.QuickMatch:input_type -> QuickMatchIn
	5, // 3: Orchestration.Spawn:input_type -> SpawnIn
	2, // 4: CompetitionV1.RegisterPersistentPlayer:output_type -> RegisterPlayerOut
	4, // 5: CompetitionV1.QuickMatch:output_type -> QuickMatchOut
	6, // 6: Orchestration.Spawn:output_type -> SpawnOut
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_competition_wire_competition_proto_init() }
func file_competition_wire_competition_proto_init() {
	if File_competition_wire_competition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_competition_wire_competition_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*UUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterPlayerIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterPlayerOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*QuickMatchIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*QuickMatchOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SpawnIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SpawnOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_competition_wire_competition_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_competition_wire_competition_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_competition_wire_competition_proto_goTypes,
		DependencyIndexes: file_competition_wire_competition_proto_depIdxs,
		MessageInfos:      file_competition_wire_competition_proto_msgTypes,
	}.Build()
	File_competition_wire_competition_proto = out.File
	file_competition_wire_competition_proto_rawDesc = nil
	file_competition_wire_competition_proto_goTypes = nil
	file_competition_wire_competition_proto_depIdxs = nil
}
