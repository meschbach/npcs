// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.17.3
// source: competition/wire/competition.proto

package wire

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text   *string `protobuf:"bytes,1,opt,name=text,proto3,oneof" json:"text,omitempty"`
	Binary []byte  `protobuf:"bytes,2,opt,name=binary,proto3,oneof" json:"binary,omitempty"`
}

func (x *UUID) Reset() {
	*x = UUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUID) ProtoMessage() {}

func (x *UUID) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUID.ProtoReflect.Descriptor instead.
func (*UUID) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{0}
}

func (x *UUID) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *UUID) GetBinary() []byte {
	if x != nil {
		return x.Binary
	}
	return nil
}

// RegisterPlayerIn provides a user handle and orchestration URL.
type RegisterPlayerIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// orchestrationURL is the address to contact the player at.  This must be an instance of the Orchestration service.
	OrchestrationURL string `protobuf:"bytes,1,opt,name=orchestrationURL,proto3" json:"orchestrationURL,omitempty"`
	// name is a human digestible name for the given player.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RegisterPlayerIn) Reset() {
	*x = RegisterPlayerIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPlayerIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPlayerIn) ProtoMessage() {}

func (x *RegisterPlayerIn) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPlayerIn.ProtoReflect.Descriptor instead.
func (*RegisterPlayerIn) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterPlayerIn) GetOrchestrationURL() string {
	if x != nil {
		return x.OrchestrationURL
	}
	return ""
}

func (x *RegisterPlayerIn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RegisterPlayerOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterPlayerOut) Reset() {
	*x = RegisterPlayerOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPlayerOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPlayerOut) ProtoMessage() {}

func (x *RegisterPlayerOut) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPlayerOut.ProtoReflect.Descriptor instead.
func (*RegisterPlayerOut) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{2}
}

type QuickMatchIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game       string `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	PlayerName string `protobuf:"bytes,2,opt,name=playerName,proto3" json:"playerName,omitempty"`
}

func (x *QuickMatchIn) Reset() {
	*x = QuickMatchIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickMatchIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickMatchIn) ProtoMessage() {}

func (x *QuickMatchIn) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickMatchIn.ProtoReflect.Descriptor instead.
func (*QuickMatchIn) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{3}
}

func (x *QuickMatchIn) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *QuickMatchIn) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

// QuickMatchOut provides details on connecting to a match
type QuickMatchOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// matchURL is the implementing service for the given match.
	MatchURL string `protobuf:"bytes,1,opt,name=matchURL,proto3" json:"matchURL,omitempty"`
	// UUID for the given match to be provided to the target service.
	UUID string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *QuickMatchOut) Reset() {
	*x = QuickMatchOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickMatchOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickMatchOut) ProtoMessage() {}

func (x *QuickMatchOut) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickMatchOut.ProtoReflect.Descriptor instead.
func (*QuickMatchOut) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{4}
}

func (x *QuickMatchOut) GetMatchURL() string {
	if x != nil {
		return x.MatchURL
	}
	return ""
}

func (x *QuickMatchOut) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

type RegisterGameIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RegisterGameIn) Reset() {
	*x = RegisterGameIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterGameIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterGameIn) ProtoMessage() {}

func (x *RegisterGameIn) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterGameIn.ProtoReflect.Descriptor instead.
func (*RegisterGameIn) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterGameIn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RegisterGameOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RegisterGameOut) Reset() {
	*x = RegisterGameOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterGameOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterGameOut) ProtoMessage() {}

func (x *RegisterGameOut) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterGameOut.ProtoReflect.Descriptor instead.
func (*RegisterGameOut) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterGameOut) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnregisterGameIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnregisterGameIn) Reset() {
	*x = UnregisterGameIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterGameIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterGameIn) ProtoMessage() {}

func (x *UnregisterGameIn) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterGameIn.ProtoReflect.Descriptor instead.
func (*UnregisterGameIn) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{7}
}

func (x *UnregisterGameIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnregisterGameOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnregisterGameOut) Reset() {
	*x = UnregisterGameOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterGameOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterGameOut) ProtoMessage() {}

func (x *UnregisterGameOut) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterGameOut.ProtoReflect.Descriptor instead.
func (*UnregisterGameOut) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{8}
}

type ListRegisteredGamesIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRegisteredGamesIn) Reset() {
	*x = ListRegisteredGamesIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRegisteredGamesIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegisteredGamesIn) ProtoMessage() {}

func (x *ListRegisteredGamesIn) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegisteredGamesIn.ProtoReflect.Descriptor instead.
func (*ListRegisteredGamesIn) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{9}
}

type RegisteredGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id     string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Active bool   `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *RegisteredGame) Reset() {
	*x = RegisteredGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisteredGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisteredGame) ProtoMessage() {}

func (x *RegisteredGame) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisteredGame.ProtoReflect.Descriptor instead.
func (*RegisteredGame) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{10}
}

func (x *RegisteredGame) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisteredGame) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegisteredGame) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type ListRegisteredGamesOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*RegisteredGame `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *ListRegisteredGamesOut) Reset() {
	*x = ListRegisteredGamesOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRegisteredGamesOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegisteredGamesOut) ProtoMessage() {}

func (x *ListRegisteredGamesOut) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegisteredGamesOut.ProtoReflect.Descriptor instead.
func (*ListRegisteredGamesOut) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{11}
}

func (x *ListRegisteredGamesOut) GetGames() []*RegisteredGame {
	if x != nil {
		return x.Games
	}
	return nil
}

type EngineAvailableIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForGame  string `protobuf:"bytes,1,opt,name=forGame,proto3" json:"forGame,omitempty"`
	StartURL string `protobuf:"bytes,2,opt,name=startURL,proto3" json:"startURL,omitempty"`
}

func (x *EngineAvailableIn) Reset() {
	*x = EngineAvailableIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineAvailableIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineAvailableIn) ProtoMessage() {}

func (x *EngineAvailableIn) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineAvailableIn.ProtoReflect.Descriptor instead.
func (*EngineAvailableIn) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{12}
}

func (x *EngineAvailableIn) GetForGame() string {
	if x != nil {
		return x.ForGame
	}
	return ""
}

func (x *EngineAvailableIn) GetStartURL() string {
	if x != nil {
		return x.StartURL
	}
	return ""
}

type EngineAvailableOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID string `protobuf:"bytes,1,opt,name=gameID,proto3" json:"gameID,omitempty"`
}

func (x *EngineAvailableOut) Reset() {
	*x = EngineAvailableOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineAvailableOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineAvailableOut) ProtoMessage() {}

func (x *EngineAvailableOut) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineAvailableOut.ProtoReflect.Descriptor instead.
func (*EngineAvailableOut) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{13}
}

func (x *EngineAvailableOut) GetGameID() string {
	if x != nil {
		return x.GameID
	}
	return ""
}

type SimpleTestGameIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID string `protobuf:"bytes,1,opt,name=gameID,proto3" json:"gameID,omitempty"`
}

func (x *SimpleTestGameIn) Reset() {
	*x = SimpleTestGameIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleTestGameIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleTestGameIn) ProtoMessage() {}

func (x *SimpleTestGameIn) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleTestGameIn.ProtoReflect.Descriptor instead.
func (*SimpleTestGameIn) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{14}
}

func (x *SimpleTestGameIn) GetGameID() string {
	if x != nil {
		return x.GameID
	}
	return ""
}

type SimpleTestGameOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SimpleTestGameOut) Reset() {
	*x = SimpleTestGameOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleTestGameOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleTestGameOut) ProtoMessage() {}

func (x *SimpleTestGameOut) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleTestGameOut.ProtoReflect.Descriptor instead.
func (*SimpleTestGameOut) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{15}
}

type EngineGameCompleteIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID string `protobuf:"bytes,1,opt,name=gameID,proto3" json:"gameID,omitempty"`
}

func (x *EngineGameCompleteIn) Reset() {
	*x = EngineGameCompleteIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineGameCompleteIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineGameCompleteIn) ProtoMessage() {}

func (x *EngineGameCompleteIn) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineGameCompleteIn.ProtoReflect.Descriptor instead.
func (*EngineGameCompleteIn) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{16}
}

func (x *EngineGameCompleteIn) GetGameID() string {
	if x != nil {
		return x.GameID
	}
	return ""
}

type EngineGameCompleteOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EngineGameCompleteOut) Reset() {
	*x = EngineGameCompleteOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineGameCompleteOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineGameCompleteOut) ProtoMessage() {}

func (x *EngineGameCompleteOut) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineGameCompleteOut.ProtoReflect.Descriptor instead.
func (*EngineGameCompleteOut) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{17}
}

type GameResultIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID string `protobuf:"bytes,1,opt,name=gameID,proto3" json:"gameID,omitempty"`
}

func (x *GameResultIn) Reset() {
	*x = GameResultIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameResultIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameResultIn) ProtoMessage() {}

func (x *GameResultIn) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameResultIn.ProtoReflect.Descriptor instead.
func (*GameResultIn) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{18}
}

func (x *GameResultIn) GetGameID() string {
	if x != nil {
		return x.GameID
	}
	return ""
}

type GameResultOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinningPlayerName string `protobuf:"bytes,1,opt,name=winningPlayerName,proto3" json:"winningPlayerName,omitempty"`
}

func (x *GameResultOut) Reset() {
	*x = GameResultOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_wire_competition_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameResultOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameResultOut) ProtoMessage() {}

func (x *GameResultOut) ProtoReflect() protoreflect.Message {
	mi := &file_competition_wire_competition_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameResultOut.ProtoReflect.Descriptor instead.
func (*GameResultOut) Descriptor() ([]byte, []int) {
	return file_competition_wire_competition_proto_rawDescGZIP(), []int{19}
}

func (x *GameResultOut) GetWinningPlayerName() string {
	if x != nil {
		return x.WinningPlayerName
	}
	return ""
}

var File_competition_wire_competition_proto protoreflect.FileDescriptor

var file_competition_wire_competition_proto_rawDesc = []byte{
	0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x77, 0x69,
	0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x50, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x22, 0x52, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x22,
	0x42, 0x0a, 0x0c, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x0d, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x52, 0x4c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x52, 0x4c,
	0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x22, 0x24, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a,
	0x10, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47,
	0x61, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x49, 0x6e, 0x22,
	0x4c, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x3f, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x49,
	0x0a, 0x11, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x22, 0x2c, 0x0a, 0x12, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x2a, 0x0a, 0x10, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x44, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x22, 0x2e, 0x0a, 0x14, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x17, 0x0a, 0x15, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x75,
	0x74, 0x22, 0x26, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x3d, 0x0a, 0x0d, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x77, 0x69,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x77, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x83, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d,
	0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x31, 0x12, 0x43, 0x0a, 0x18, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x1a, 0x12, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12,
	0x2d, 0x0a, 0x0a, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0d, 0x2e,
	0x51, 0x75, 0x69, 0x63, 0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x1a, 0x0e, 0x2e, 0x51,
	0x75, 0x69, 0x63, 0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x32, 0xc8,
	0x01, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12,
	0x33, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x12,
	0x0f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e,
	0x1a, 0x10, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4f,
	0x75, 0x74, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0e, 0x75, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x11, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x1a, 0x12, 0x2e, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12,
	0x48, 0x0a, 0x13, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x49, 0x6e, 0x1a, 0x17,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x32, 0x98, 0x01, 0x0a, 0x17, 0x47, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x1a, 0x13, 0x2e, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x75,
	0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x1a, 0x16, 0x2e, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x22, 0x00, 0x32, 0x4d, 0x0a, 0x15, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x11, 0x2e, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x54, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x1a, 0x12, 0x2e,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x65, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x75,
	0x74, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_competition_wire_competition_proto_rawDescOnce sync.Once
	file_competition_wire_competition_proto_rawDescData = file_competition_wire_competition_proto_rawDesc
)

func file_competition_wire_competition_proto_rawDescGZIP() []byte {
	file_competition_wire_competition_proto_rawDescOnce.Do(func() {
		file_competition_wire_competition_proto_rawDescData = protoimpl.X.CompressGZIP(file_competition_wire_competition_proto_rawDescData)
	})
	return file_competition_wire_competition_proto_rawDescData
}

var file_competition_wire_competition_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_competition_wire_competition_proto_goTypes = []any{
	(*UUID)(nil),                   // 0: UUID
	(*RegisterPlayerIn)(nil),       // 1: RegisterPlayerIn
	(*RegisterPlayerOut)(nil),      // 2: RegisterPlayerOut
	(*QuickMatchIn)(nil),           // 3: QuickMatchIn
	(*QuickMatchOut)(nil),          // 4: QuickMatchOut
	(*RegisterGameIn)(nil),         // 5: RegisterGameIn
	(*RegisterGameOut)(nil),        // 6: RegisterGameOut
	(*UnregisterGameIn)(nil),       // 7: UnregisterGameIn
	(*UnregisterGameOut)(nil),      // 8: UnregisterGameOut
	(*ListRegisteredGamesIn)(nil),  // 9: ListRegisteredGamesIn
	(*RegisteredGame)(nil),         // 10: RegisteredGame
	(*ListRegisteredGamesOut)(nil), // 11: ListRegisteredGamesOut
	(*EngineAvailableIn)(nil),      // 12: EngineAvailableIn
	(*EngineAvailableOut)(nil),     // 13: EngineAvailableOut
	(*SimpleTestGameIn)(nil),       // 14: SimpleTestGameIn
	(*SimpleTestGameOut)(nil),      // 15: SimpleTestGameOut
	(*EngineGameCompleteIn)(nil),   // 16: EngineGameCompleteIn
	(*EngineGameCompleteOut)(nil),  // 17: EngineGameCompleteOut
	(*GameResultIn)(nil),           // 18: GameResultIn
	(*GameResultOut)(nil),          // 19: GameResultOut
}
var file_competition_wire_competition_proto_depIdxs = []int32{
	10, // 0: ListRegisteredGamesOut.games:type_name -> RegisteredGame
	1,  // 1: CompetitionV1.registerPersistentPlayer:input_type -> RegisterPlayerIn
	3,  // 2: CompetitionV1.quickMatch:input_type -> QuickMatchIn
	5,  // 3: GameRegistry.registerGame:input_type -> RegisterGameIn
	7,  // 4: GameRegistry.unregisterGame:input_type -> UnregisterGameIn
	9,  // 5: GameRegistry.listRegisteredGames:input_type -> ListRegisteredGamesIn
	12, // 6: GameEngineOrchestration.engineAvailable:input_type -> EngineAvailableIn
	16, // 7: GameEngineOrchestration.gameComplete:input_type -> EngineGameCompleteIn
	14, // 8: SimpleTestGameService.connected:input_type -> SimpleTestGameIn
	2,  // 9: CompetitionV1.registerPersistentPlayer:output_type -> RegisterPlayerOut
	4,  // 10: CompetitionV1.quickMatch:output_type -> QuickMatchOut
	6,  // 11: GameRegistry.registerGame:output_type -> RegisterGameOut
	8,  // 12: GameRegistry.unregisterGame:output_type -> UnregisterGameOut
	11, // 13: GameRegistry.listRegisteredGames:output_type -> ListRegisteredGamesOut
	13, // 14: GameEngineOrchestration.engineAvailable:output_type -> EngineAvailableOut
	17, // 15: GameEngineOrchestration.gameComplete:output_type -> EngineGameCompleteOut
	15, // 16: SimpleTestGameService.connected:output_type -> SimpleTestGameOut
	9,  // [9:17] is the sub-list for method output_type
	1,  // [1:9] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_competition_wire_competition_proto_init() }
func file_competition_wire_competition_proto_init() {
	if File_competition_wire_competition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_competition_wire_competition_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*UUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterPlayerIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterPlayerOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*QuickMatchIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*QuickMatchOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterGameIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterGameOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UnregisterGameIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UnregisterGameOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ListRegisteredGamesIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*RegisteredGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ListRegisteredGamesOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*EngineAvailableIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*EngineAvailableOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SimpleTestGameIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SimpleTestGameOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*EngineGameCompleteIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*EngineGameCompleteOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GameResultIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_wire_competition_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GameResultOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_competition_wire_competition_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_competition_wire_competition_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_competition_wire_competition_proto_goTypes,
		DependencyIndexes: file_competition_wire_competition_proto_depIdxs,
		MessageInfos:      file_competition_wire_competition_proto_msgTypes,
	}.Build()
	File_competition_wire_competition_proto = out.File
	file_competition_wire_competition_proto_rawDesc = nil
	file_competition_wire_competition_proto_goTypes = nil
	file_competition_wire_competition_proto_depIdxs = nil
}
